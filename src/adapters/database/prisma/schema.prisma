generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id           String         @id @default(uuid())
    name         String
    email        String         @unique
    password     String
    createdAt    DateTime       @default(now()) @map(name: "created_at")
    updatedAt    DateTime       @updatedAt @map(name: "updated_at")
    Todos        Todo[]
    UserCategory UserCategory[]

    @@index([id])
    @@map("users")
}

model Category {
    id           String         @id @default(uuid())
    name         String         @unique
    createdAt    DateTime       @default(now()) @map(name: "created_at")
    updatedAt    DateTime       @updatedAt @map(name: "updated_at")
    TodoCategory TodoCategory[]
    UserCategory UserCategory[]

    @@index([name])
    @@map("categories")
}

model Todo {
    id           String         @id @default(uuid())
    title        String
    description  String
    important    Boolean        @default(false)
    completed    Boolean        @default(false)
    userId       String         @map(name: "user_id")
    user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt    DateTime       @default(now()) @map(name: "created_at")
    updatedAt    DateTime       @updatedAt @map(name: "updated_at")
    TodoCategory TodoCategory[]

    @@index([id])
    @@map("todos")
}

model TodoCategory {
    id         String   @id @default(uuid())
    todoId     String   @unique @map(name: "todo_id")
    categoryId String   @map(name: "category_id")
    todo       Todo     @relation(fields: [todoId], references: [id], onDelete: Cascade)
    category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
    createdAt  DateTime @default(now()) @map(name: "created_at")
    updatedAt  DateTime @updatedAt @map(name: "updated_at")

    @@index([todoId, categoryId])
    @@map("todoCategories")
}

model UserCategory {
    id         String   @id @default(uuid())
    userId     String   @map(name: "user_id")
    categoryId String   @map(name: "category_id")
    user       User     @relation(fields: [userId], references: [id])
    category   Category @relation(fields: [categoryId], references: [id])
    createdAt  DateTime @default(now()) @map(name: "created_at")
    updatedAt  DateTime @updatedAt @map(name: "updated_at")

    @@index([categoryId])
    @@map("userCategories")
}
